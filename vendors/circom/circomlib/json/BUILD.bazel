load("@kroma_network_tachyon//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_unittest")

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "groth16_proof",
    hdrs = ["groth16_proof.h"],
    deps = [
        ":json_converter_forward",
        ":points",
        "@kroma_network_tachyon//tachyon/base:logging",
        "@kroma_network_tachyon//tachyon/zk/r1cs/groth16:proof",
    ],
)

tachyon_cc_library(
    name = "json",
    hdrs = ["json.h"],
    deps = [
        ":json_converter_forward",
        "@com_github_tencent_rapidjson//:rapidjson",
        "@kroma_network_tachyon//tachyon/base/files:file_util",
    ],
)

tachyon_cc_library(
    name = "json_converter_forward",
    hdrs = ["json_converter_forward.h"],
    deps = ["@com_github_tencent_rapidjson//:rapidjson"],
)

tachyon_cc_library(
    name = "points",
    hdrs = ["points.h"],
    deps = [
        "@com_github_tencent_rapidjson//:rapidjson",
        "@kroma_network_tachyon//tachyon/math/geometry:affine_point",
    ],
)

tachyon_cc_library(
    name = "prime_field",
    hdrs = ["prime_field.h"],
    deps = [
        ":json_converter_forward",
        "@com_google_absl//absl/types:span",
        "@kroma_network_tachyon//tachyon/math/finite_fields:prime_field_base",
    ],
)

tachyon_cc_unittest(
    name = "json_unittests",
    srcs = [
        "groth16_proof_unittest.cc",
        "prime_field_unittest.cc",
    ],
    deps = [
        ":groth16_proof",
        ":prime_field",
        "@kroma_network_tachyon//tachyon/math/elliptic_curves/bn/bn254",
        "@kroma_network_tachyon//tachyon/math/finite_fields/test:finite_field_test",
    ],
)
